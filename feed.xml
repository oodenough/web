

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://oodenough.github.io/</id>
  <title>Haozilla</title>
  <subtitle>For technical writing.</subtitle>
  <updated>2024-01-28T19:47:15+08:00</updated>
  <author>
    <name>Haozilla</name>
    <uri>https://oodenough.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://oodenough.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://oodenough.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 Haozilla </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>如何将Qt配置到vscode</title>
    <link href="https://oodenough.github.io/posts/qt-in-vscode/" rel="alternate" type="text/html" title="如何将Qt配置到vscode" />
    <published>2023-10-24T00:00:00+08:00</published>
  
    <updated>2024-01-28T17:49:24+08:00</updated>
  
    <id>https://oodenough.github.io/posts/qt-in-vscode/</id>
    <content src="https://oodenough.github.io/posts/qt-in-vscode/" />
    <author>
      <name>Haozilla</name>
    </author>

  
    
    <category term="Tools" />
    
  

  
    <summary>
      





      ”将Qt配置到vscode“指的是把Qt库添加到vscode，并在vscode中使用qmake和mingw32-make两个工具完成C++Qt项目的构建和编译。

首先在Windows上安装好vscode和Qt

Linux和Windows类似，只不过安装完成后不需要手动添加环境变量，然后文件路径与Windows不同。

安装Qt时至少勾选Qt/MinGW和Developer and Designer Tools/MinGW两个组件。

第一个组件包含了Qt库和qmake工具，第二个则包含了mingw32-make。

安装好后将qmake的路径C:\Qt\6.5.2\mingw_64\bin和mingw32-make的路径C:\Qt\Tools\mingw1120_64\bin添加到系统环境变量。

路径根据安装时的选项做修改。

添加Qt头文件路径

首先在vscode里安装C/...
    </summary>
  

  </entry>

  
  <entry>
    <title>:wq</title>
    <link href="https://oodenough.github.io/posts/vim/" rel="alternate" type="text/html" title=":wq" />
    <published>2023-10-21T00:00:00+08:00</published>
  
    <updated>2024-01-28T17:49:24+08:00</updated>
  
    <id>https://oodenough.github.io/posts/vim/</id>
    <content src="https://oodenough.github.io/posts/vim/" />
    <author>
      <name>Haozilla</name>
    </author>

  
    
    <category term="Tools" />
    
  

  
    <summary>
      





      很久没有写博客了,想了想决定坚持写下去。

今天分享的是一个叫vim的editor软件,这篇博客的标题就来自于它。维基百科上有一个叫编辑器之战的词条，参战双方分别是vim和emacs,很有意思。:wq是vim中的保存退出命令,经常会用到。 vim最初叫vi(Visual Editor), 是Bill Joy在1976年为BSD Unix系统开发的。vim则是对vi做了改进,即vi improved。

先说说vim的好处,头一个是速度快。在使用vim编辑代码时,不需要频繁地使用鼠标,因为vim使用键盘来移动光标,仅这一点,vim就比其他编辑器快了不少。另一个好处是适用的地方很多，比如下载一个vimium浏览器插件，在浏览网页的时候就可以用简单的vim语法来代替鼠标，而另一个插件wasavi则可以让你在网页上的文本输入框中使用vim语法，不仅网页，一众编辑器都支持vim语法，比如在vs...
    </summary>
  

  </entry>

  
  <entry>
    <title>Windows 修复 EFI 分区</title>
    <link href="https://oodenough.github.io/posts/how-to-repair-windows-efi-partition/" rel="alternate" type="text/html" title="Windows 修复 EFI 分区" />
    <published>2023-07-12T00:00:00+08:00</published>
  
    <updated>2024-01-28T17:49:24+08:00</updated>
  
    <id>https://oodenough.github.io/posts/how-to-repair-windows-efi-partition/</id>
    <content src="https://oodenough.github.io/posts/how-to-repair-windows-efi-partition/" />
    <author>
      <name>Haozilla</name>
    </author>

  
    
    <category term="OS" />
    
  

  
    <summary>
      





      EFI分区里有 bootmanager 和 bootloader

装有多个操作系统的电脑开机时，首先进入bootmanager界面，选择加载哪个bootloader，然后bootloader再 boot 对应系统。

创建 EFI 分区

如果只是分区里的文件损坏，efi分区还在的话可以跳过这一步。

Windows 无法自己创建EFI分区，要借助第三方工具。

我使用的是 Arch Linux 的 LiveOS，烧录到U盘插电脑boot后进行操作。

分出适当的空间后，创建文件系统即可

mkfs.fat -F32 /dev/sda3


复制文件

有了EFI分区后，将合适的文件复制粘贴过去就完成修复了。

下载对应 Windows 的iso文件，烧录到U盘里。

然后插电脑boot，选择命令行修复操作系统。

运行diskpart工具

diskpart


列出硬盘

li...
    </summary>
  

  </entry>

  
  <entry>
    <title>如何在 debian 上安装使用 tor</title>
    <link href="https://oodenough.github.io/posts/How-to-use-tor-on-linux/" rel="alternate" type="text/html" title="如何在 debian 上安装使用 tor" />
    <published>2023-06-29T00:00:00+08:00</published>
  
    <updated>2024-01-28T17:49:24+08:00</updated>
  
    <id>https://oodenough.github.io/posts/How-to-use-tor-on-linux/</id>
    <content src="https://oodenough.github.io/posts/How-to-use-tor-on-linux/" />
    <author>
      <name>Haozilla</name>
    </author>

  
    
    <category term="OS" />
    
  

  
    <summary>
      





      简介

tor的全称是the onion router,是用来保护互联网隐私的一个开源软件。

这篇文章是在debian上安装使用tor代理的过程。


  使用tor的 前提 是能够连接到tor的relay 见下图




安装

在 debian 上安装 tor 只需要执行一条命令

sudo apt-get install tor


配置

编辑torrc文件

sudo vi /etc/torrc


找到并注释下面这行

#ControlPort 9051


再找到下面这行 注释并把 1 改成 0

#CookieAuthentication 1


重启 tor

sudo /etc/init.d/tor restart


测试

查看 真实的公网ip

curl ifconfig.me


查看 使用tor后的ip

torify curl ifconfig.me...
    </summary>
  

  </entry>

  
  <entry>
    <title>如何安装 Arch Linux</title>
    <link href="https://oodenough.github.io/posts/How-to-install-Arch-Linux/" rel="alternate" type="text/html" title="如何安装 Arch Linux" />
    <published>2023-05-11T00:00:00+08:00</published>
  
    <updated>2024-01-28T17:49:24+08:00</updated>
  
    <id>https://oodenough.github.io/posts/How-to-install-Arch-Linux/</id>
    <content src="https://oodenough.github.io/posts/How-to-install-Arch-Linux/" />
    <author>
      <name>Haozilla</name>
    </author>

  
    
    <category term="OS" />
    
  

  
    <summary>
      





      联网

进入 iwd 的交互式提示符

iwctl


列出可用的网络设备

device list


使用无线网卡 wlan0 扫描可用wlan

station wlan0 scan 


列出扫描到的wlan网络

station wlan0 get-networks


连接wlan网络

station wlan0 connect wifiname 


退出 iwd 提示符

exit


测试网络连接

ping baidu.com


更换软件源

vim /etc/pacman.d/mirrorlist


一些国内高校的软件源

Server = https://mirrors.bfsu.edu.cn/archlinux/$repo/os/$arch
Server = https://mirrors.cqu.edu.cn/archlinux/$repo/os/$...
    </summary>
  

  </entry>

</feed>


